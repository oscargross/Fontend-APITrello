{"version":3,"sources":["components/FormCard.js","components/FormCheckList.js","components/FormCheckItem.js","pages/Navbar.js","App.js","index.js"],"names":["FormCard","useState","name","desc","pos","due","dueComplete","idList","idLabels","urlSource","formValues","setFormValues","handleInputChange","e","target","value","type","checked","console","log","isCheckbox","data","newValue","Container","className","Form","Row","Group","as","Col","Label","Control","placeholder","onChange","controlId","id","Check","rows","custom","inline","label","Button","variant","initialValues","board","list","FormCheckList","defaultValue","FormCheckItem","Main","useHistory","screen","setScreen","Navbar","bg","expand","Text","onClick","Image","style","height","Toggle","aria-controls","Collapse","Nav","Link","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2282271c.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport './Form.css'\r\n\r\nexport default function FormCard() {\r\n  const initialValues = {\r\n    name: '',\r\n    desc: '',\r\n    pos: 'bottom',\r\n    due: '',\r\n    dueComplete: 'false',\r\n    idList: '605bcb467e18477f336b1f54',\r\n    idLabels: '',\r\n    urlSource: '',\r\n  }\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    console.log({ name, value, type, checked });\r\n    const isCheckbox = type === 'checkbox';\r\n    if (type == 'checkbox') {\r\n      formValues[name] = checked\r\n\r\n    } else {\r\n      formValues[name] = value\r\n    }\r\n\r\n    const data = formValues[name] || {};\r\n\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n    console.log(formValues)\r\n\r\n  };\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n    console.log('*** handleSubmit', data);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container className='container'>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Nome</Form.Label>\r\n            <Form.Control type=\"text\" name='name' placeholder=\"Nome do card\" value={formValues.name} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" controlId=\"formGridState\">\r\n            <Form.Label>Qual será sua lista</Form.Label>\r\n            <Form.Control as=\"select\" name='idList' value={formValues.idList} onChange={handleInputChange}>\r\n              <option value=\"605bcb467e18477f336b1f54\">A Fazer</option>\r\n              <option value=\"605bcb467e18477f336b1f55\">Em Andamento</option>\r\n              <option value=\"605bcb467e18477f336b1f56\">Concluído</option>\r\n\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Data de entrega</Form.Label>\r\n            <Form.Control type=\"date\" name='due' placeholder=\"Data de entrega\" value={formValues.due} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" controlId=\"formGridState\">\r\n            <Form.Label>Posição na lista</Form.Label>\r\n            <Form.Control as=\"select\" name='pos' value={formValues.pos} onChange={handleInputChange}>\r\n              <option value=\"top\">Topo da lista</option>\r\n              <option value=\"bottom\">Fim da lista</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\" id=\"concluido\" >\r\n            <Form.Check type=\"checkbox\" value='true' name='dueComplete' value={formValues.dueComplete} label=\"Tarefa já concluída\" onChange={handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group as={Col}></Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\" >\r\n            <Form.Label>Descrição</Form.Label>\r\n\r\n            <Form.Control as=\"textarea\" name='desc' rows={3} value={formValues.desc} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" key={'idLabels'} className=\"mb-3\">\r\n            <Form.Label className=\"block\">Adicione labels ao seu card</Form.Label>\r\n            <div className=\"block\">\r\n              <Form.Check\r\n                custom\r\n                name='idLabels'\r\n                value='605bcb46184d2c731b8fc582'\r\n                inline\r\n                label=\"verde\"\r\n                type='checkbox'\r\n                id={'idLabels1'}\r\n              // onChange={handleInputChange}\r\n\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc585'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"amarelo\"\r\n                type='checkbox'\r\n                id={'idLabels2'}\r\n              // onChange={handleInputChange}\r\n\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc589'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"vermelho\"\r\n                type='checkbox'\r\n                id={'idLabels3'}\r\n              // onChange={handleInputChange}\r\n\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc58c'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"roxo\"\r\n                type='checkbox'\r\n                id={'idLabels4'}\r\n              // onChange={handleInputChange}\r\n\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc58e'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"azul\"\r\n                type='checkbox'\r\n                id={'idLabels5'}\r\n              // onChange={handleInputChange}\r\n\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Insira uma imagem ao card (cole a url da imagem)</Form.Label>\r\n            <Form.Control type=\"text\" name='urlSource' placeholder=\"url imagem\" value={formValues.urlSource} onChange={handleInputChange} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row className=\"button\">\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Enviar\r\n          </Button>\r\n        </Form.Row>\r\n\r\n\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport {useState} from 'react'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  board: '',\r\n  list: '',\r\n  desc: '', \r\n}\r\n\r\n\r\nexport default function FormCheckList() {\r\n\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    console.log(formValues)\r\n    const data = formValues[name] || {};\r\n    if (isCheckbox) {\r\n      data[value] = checked;\r\n    }\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n    console.log('*** handleSubmit', data);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleInputChange}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleInputChange}/>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"formGridAddress1\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control placeholder=\"1234 Main St\" onChange={handleInputChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridAddress2\">\r\n          <Form.Label>Address 2</Form.Label>\r\n          <Form.Control placeholder=\"Apartment, studio, or floor\" onChange={handleInputChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridCity\" >\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control onChange={handleInputChange}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridState\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n              <option>Choose...</option>\r\n              <option>...</option> \r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridZip\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group id=\"formGridCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>\r\n\r\n       \r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport {useState} from 'react'\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  board: '',\r\n  list: '',\r\n  desc: '', \r\n}\r\n\r\n\r\nexport default function FormCheckItem() {\r\n\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    console.log(formValues)\r\n    const data = formValues[name] || {};\r\n    if (isCheckbox) {\r\n      data[value] = checked;\r\n    }\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n    console.log('*** handleSubmit', data);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleInputChange}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleInputChange}/>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"formGridAddress1\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control placeholder=\"1234 Main St\" onChange={handleInputChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridAddress2\">\r\n          <Form.Label>Address 2</Form.Label>\r\n          <Form.Control placeholder=\"Apartment, studio, or floor\" onChange={handleInputChange}/>\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"formGridCity\" >\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control onChange={handleInputChange}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridState\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n              <option>Choose...</option>\r\n              <option>...</option> \r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n         \r\n        </Form.Row>\r\n\r\n        <Form.Group id=\"formGridCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n  </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","\r\nimport FormCard from '../components/FormCard'\r\nimport FormCheckList from '../components/FormCheckList';\r\nimport FormCheckItem from '../components/FormCheckItem';\r\nimport React, { useState, useLayoutEffect } from 'react';\r\nimport { Form, Button, Navbar, Nav, Image } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Main() {\r\n    let history = useHistory();\r\n    const [screen, setScreen] = useState(0)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Text onClick={() => setScreen(0)}><Image  style={{ height: 80 }} />Trello-API</Navbar.Text>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link onClick={() => setScreen(0)}>Cards</Nav.Link>\r\n                        <Nav.Link onClick={() => setScreen(1)}>CheckLists</Nav.Link>\r\n                        <Nav.Link onClick={() => setScreen(2)}>CheckItems</Nav.Link>\r\n\r\n                    </Nav>\r\n                   \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n            <div className='container' >\r\n                {screen === 0 &&\r\n                    <FormCard setScreen={setScreen} />\r\n                }\r\n                {screen === 1 &&\r\n                    <FormCheckList setScreen={setScreen} />\r\n                }\r\n                {screen === 2 &&\r\n                    <FormCheckItem setScreen={setScreen} />\r\n                }\r\n               \r\n            </div>\r\n\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Main from './pages/Navbar'\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact={true} component={Main} />\n         \n         \n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}