{"version":3,"sources":["pages/Navbar.js","pages/List.js","services/axiosCard.js","components/FormCard.js","components/FormCheckList.js","components/FormCheckItem.js","App.js","index.js"],"names":["Main","Navbar","bg","expand","Text","Image","style","height","Toggle","aria-controls","Collapse","id","Nav","marginLeft","Link","to","className","List","props","useState","textInfo","setTextInfo","msg","setMsg","useEffect","location","state","console","log","length","display","textAlign","color","Container","Table","responsive","bordered","marginTop","map","itemEx","key","href","url","name","desc","post","a","data","query","axios","method","then","res","status","error","message","getCards","getChecklists","idCard","FormCard","initialValues","pos","due","dueComplete","idLabels","urlSource","formValues","setFormValues","nameList","setNameList","history","useHistory","handleInputChange","e","target","value","type","checked","isCheckbox","newValue","handleSubmit","preventDefault","Object","keys","forEach","item","push","pathname","Form","Row","Group","as","Col","Label","Control","placeholder","onChange","controlId","Check","rows","custom","inline","label","Button","variant","onClick","FormCheckList","nameCard","nameCards","setNameCards","cards","FormCheckItem","nameCheckList","nameCheckLists","setNameCheckLists","checklists","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c7da02b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  Navbar, Nav, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Main() {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Text><Image  style={{ height: 70 }} /></Navbar.Text>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav  style={{ marginLeft: 100 }}>\r\n                        <Nav.Link><Link to=\"./\" className=\"nav-link nav--hover\">Cards</Link></Nav.Link>\r\n                        <Nav.Link ><Link to=\"./checkList\" className=\"nav-link nav--hover\">CheckLists</Link></Nav.Link>\r\n                        <Nav.Link ><Link to=\"./checkItem\" className=\"nav-link nav--hover\">CheckItems</Link></Nav.Link>\r\n                    </Nav>                   \r\n                </Navbar.Collapse>\r\n            </Navbar>                    \r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Table } from 'react-bootstrap'\r\n\r\n\r\nexport default function List(props) {\r\n    const [textInfo, setTextInfo] = useState([]);\r\n    const [msg, setMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        setTextInfo(props.location.state);\r\n        console.log(textInfo);\r\n        if (textInfo.length) {\r\n            setMsg('Dados encontrados:')\r\n        } else {\r\n            setMsg('Nenhum dado encontrado')\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <p style={{ display: 'block', textAlign: \"center\", color: 'red' }}>{msg}</p>\r\n\r\n\r\n            <Container>\r\n                <Table responsive bordered style={{ marginTop: '20px' }}>\r\n                    <thead responsive>\r\n                        <tr>\r\n                            <td>Card</td>\r\n                            <td>Nome</td>\r\n                            <td>Descrição</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {textInfo.map((itemEx, key) => {\r\n                            return <tr key={key}>\r\n                                <td><a href={itemEx.url}>LINK</a></td>\r\n                                <td>{itemEx.name}</td>\r\n                                <td>{itemEx.desc}</td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n","import axios from 'axios'\r\nimport querystring from 'querystring'\r\n\r\nexport const post = async ({ data, query }) => {\r\n\r\n    return await axios({\r\n        method: 'get',\r\n//      url: `https://api--trello.herokuapp.com/`,\r\n        url: `https://api.trello.com/1/boards/7GQzKJOi/cards?key=1c1d1d2f9e61ecbc410102acc2b7d4ed&token=6fb62d2e3fdcef0aafc8daadccaa2cb0e4302ee834b7b7607267e0fcf2021d04`,\r\n        data: data\r\n    }).then((res) => {\r\n\r\n        if (res.status) {\r\n            return { error: false, message: res.data }\r\n        }\r\n        return { error: true }\r\n    });\r\n\r\n}\r\n\r\nexport const get = async ({ query }) => {\r\n\r\n    axios({\r\n        method: 'get',\r\n//      url: `https://api--trello.herokuapp.com/`,\r\n\r\n        url: `https://api.trello.com/1/boards/7GQzKJOi/cards?key=1c1d1d2f9e61ecbc410102acc2b7d4ed&token=6fb62d2e3fdcef0aafc8daadccaa2cb0e4302ee834b7b7607267e0fcf2021d04`,\r\n    }).then((res) => {\r\n        if (res.status) {\r\n            return { error: false }\r\n        }\r\n        return { error: true }\r\n    });\r\n}\r\n\r\nexport const getCards = async () => {\r\n\r\n    return await axios({\r\n        method: 'get',\r\n//      url: `https://api--trello.herokuapp.com/`,\r\n\r\n        url: `https://api.trello.com/1/boards/7GQzKJOi/cards?key=1c1d1d2f9e61ecbc410102acc2b7d4ed&token=6fb62d2e3fdcef0aafc8daadccaa2cb0e4302ee834b7b7607267e0fcf2021d04`,\r\n    }).then((res) => {\r\n        return { error: false , message: res.data }\r\n        \r\n    });\r\n}\r\n\r\n\r\nexport const getChecklists = async (idCard) => {\r\n    return await axios({\r\n        method: 'get',\r\n//      url: `https://api--trello.herokuapp.com/`,\r\n\r\n        url: 'https://api.trello.com/1/cards/'+idCard+'/checklists?key=1c1d1d2f9e61ecbc410102acc2b7d4ed&token=6fb62d2e3fdcef0aafc8daadccaa2cb0e4302ee834b7b7607267e0fcf2021d04',\r\n    }).then((res) => {\r\n        return { error: false , message: res.data }\r\n        \r\n    });\r\n}\r\n","import React, { useState } from 'react';\r\nimport { post } from '../services/axiosCard'\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Form.css'\r\n\r\nexport default function FormCard() {\r\n  const initialValues = {\r\n    name: '',\r\n    desc: '',\r\n    pos: 'bottom',\r\n    due: '',\r\n    dueComplete: 'false',\r\n    idLabels: '',\r\n    urlSource: '',\r\n  }\r\n\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [nameList, setNameList] = useState({ nameList: 'A fazer' })\r\n  const history = useHistory()\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n\r\n    if (type == 'checkbox') {\r\n      formValues[name] = checked\r\n    } else {\r\n      formValues[name] = value\r\n    }\r\n\r\n    const data = formValues[name] || {};\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    Object.keys(formValues).forEach((item) => {\r\n\r\n      if (formValues[item] == '') {\r\n        delete formValues[item]\r\n      }\r\n\r\n    });\r\n\r\n    await post({ data: formValues, query: nameList }).then((res) => {\r\n      setFormValues(initialValues)\r\n      setNameList({ nameList: 'A fazer' })\r\n\r\n      history.push({\r\n        pathname: '/list',\r\n        state: res.message,\r\n      });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container className='container'>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Nome</Form.Label>\r\n            <Form.Control type=\"text\" name='name' placeholder=\"Nome do card\" value={formValues.name} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" controlId=\"formGridState\">\r\n            <Form.Label>Qual será sua lista</Form.Label>\r\n            <Form.Control as=\"select\" name='nameList' value={formValues.nameList} onChange={(e) => { setNameList({ nameList: e.target.value }) }}>\r\n              <option>A fazer</option>\r\n              <option>Em Andamento</option>\r\n              <option>Concluído</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Data de entrega</Form.Label>\r\n            <Form.Control type=\"date\" name='due' placeholder=\"Data de entrega\" value={formValues.due} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" controlId=\"formGridState\">\r\n            <Form.Label>Posição na lista</Form.Label>\r\n            <Form.Control as=\"select\" name='pos' value={formValues.pos} onChange={handleInputChange}>\r\n              <option value=\"top\">Topo da lista</option>\r\n              <option value=\"bottom\">Fim da lista</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\" id=\"concluido\" >\r\n            <Form.Check type=\"checkbox\" value='true' name='dueComplete' value={formValues.dueComplete} label=\"Tarefa já concluída\" onChange={handleInputChange} />\r\n          </Form.Group>\r\n          <Form.Group as={Col}></Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\" >\r\n            <Form.Label>Descrição</Form.Label>\r\n            <Form.Control as=\"textarea\" name='desc' rows={3} value={formValues.desc} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" key={'idLabels'} className=\"mb-3\">\r\n            <Form.Label className=\"block\">Adicione labels ao seu card</Form.Label>\r\n            <div className=\"block\">\r\n              <Form.Check\r\n                custom\r\n                name='idLabels'\r\n                value='605bcb46184d2c731b8fc582'\r\n                inline\r\n                label=\"verde\"\r\n                type='checkbox'\r\n                id={'idLabels1'}\r\n              // onChange={handleInputChange}\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc585'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"amarelo\"\r\n                type='checkbox'\r\n                id={'idLabels2'}\r\n              // onChange={handleInputChange}\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc589'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"vermelho\"\r\n                type='checkbox'\r\n                id={'idLabels3'}\r\n              // onChange={handleInputChange}\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc58c'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"roxo\"\r\n                type='checkbox'\r\n                id={'idLabels4'}\r\n              // onChange={handleInputChange}\r\n              />\r\n              <Form.Check\r\n                value='605bcb46184d2c731b8fc58e'\r\n                name='idLabels'\r\n                custom\r\n                inline\r\n                label=\"azul\"\r\n                type='checkbox'\r\n                id={'idLabels5'}\r\n              // onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Insira uma imagem ao card (cole a url da imagem)</Form.Label>\r\n            <Form.Control type=\"text\" name='urlSource' placeholder=\"url imagem\" value={formValues.urlSource} onChange={handleInputChange} />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"button\">\r\n         \r\n          <Button variant=\"primary\" onClick={handleSubmit} type=\"submit\">\r\n            Enviar\r\n          </Button>\r\n        </Form.Row>\r\n\r\n      </Form>\r\n    </Container>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { post } from '../services/axiosCard'\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Form.css'\r\nimport { getCards } from '../services/axiosCard'\r\n\r\nexport default function FormCheckList() {\r\n  const initialValues = {\r\n    name: '',\r\n    nameCard: ''\r\n  }\r\n\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [nameCards, setNameCards] = useState([])\r\n  const history = useHistory()\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    if (type == 'checkbox') {\r\n      formValues[name] = checked\r\n    } else {\r\n      formValues[name] = value\r\n    }\r\n    const data = formValues[name] || {};\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const cards = await (await getCards()).message\r\n    await setNameCards(cards)\r\n    setFormValues({ ...formValues, nameCard: cards[0].name });\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    Object.keys(formValues).forEach((item) => {\r\n\r\n      if (formValues[item] == '') {\r\n        delete formValues[item]\r\n      }\r\n\r\n    });\r\n    await post({ data: formValues, query: nameCards }).then((res) => {\r\n      setFormValues(initialValues)\r\n\r\n      history.push({\r\n        pathname: '/',\r\n        state: res.message,\r\n      });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container className='container'>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Nome CheckList</Form.Label>\r\n            <Form.Control type=\"text\" name='name' placeholder=\"Nome do card\" value={formValues.name} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" >\r\n            <Form.Label>Nome do Card</Form.Label>\r\n            <Form.Control as=\"select\" name='nameCard' value={formValues.nameCards} onChange={handleInputChange}>\r\n              {nameCards.map((item, key) => {\r\n                return <option key={key}>{item.name}</option>\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"button\">\r\n          <Button variant=\"primary\" onClick={handleSubmit} type=\"submit\">\r\n            Enviar\r\n          </Button>\r\n        </Form.Row>\r\n\r\n      </Form>\r\n    </Container>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {post} from '../services/axiosCard'\r\nimport { Form, Container, Button, Col } from 'react-bootstrap'\r\nimport './Form.css'\r\nimport {getCards} from '../services/axiosCard'\r\nimport {getChecklists} from '../services/axiosCard'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function FormCheckItem() {\r\n  const initialValues = {\r\n    name: '',  \r\n    nameCard: '',\r\n    nameCheckList: ''  \r\n  }\r\n\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [nameCards, setNameCards] = useState([])\r\n  const [nameCheckLists, setNameCheckLists] = useState([])\r\n  const history = useHistory()\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    if (type == 'checkbox') {\r\n      formValues[name] = checked\r\n    } else {\r\n      formValues[name] = value\r\n    }    \r\n    const data = formValues[name] || {};\r\n    const newValue = isCheckbox ? data : value;\r\n    setFormValues({ ...formValues, [name]: newValue });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const cards = await (await getCards()).message\r\n    await setNameCards(cards)\r\n    setFormValues({ ...formValues, nameCard: cards[0].name });\r\n\r\n\r\n    const checklists = await (await getChecklists(cards[0].id)).message\r\n    await setNameCheckLists(checklists)\r\n    // await setFormValues({ ...formValues, nameCheckList: checklists[0].name });\r\n  }, [])\r\n  \r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    Object.keys(formValues).forEach((item) => {\r\n\r\n      if (formValues[item] == '') {\r\n        delete formValues[item]\r\n      }\r\n      \r\n    });\r\n    await post({data: formValues, query:nameCards }).then((res) => {\r\n      setFormValues(initialValues)\r\n      \r\n      history.push({\r\n        pathname: '/',\r\n        state: res.message,\r\n      });\r\n     })    \r\n  }\r\n\r\n  return (\r\n    <Container className='container'>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"coluna\">\r\n            <Form.Label>Nome CheckItem</Form.Label>\r\n            <Form.Control type=\"text\" name='name' placeholder=\"Nome do card\" value={formValues.name} onChange={handleInputChange} />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" >\r\n            <Form.Label>Nome do Card</Form.Label>\r\n            <Form.Control as=\"select\" name='nameCard' value={formValues.nameCards} onChange={handleInputChange}>\r\n            {nameCards.map((item, key) => {\r\n              return <option key={key}>{item.name}</option>\r\n            })}              \r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} className=\"coluna\" >\r\n            <Form.Label>Nome da CheckList</Form.Label>\r\n            <Form.Control as=\"select\" name='nameCheckLists' value={formValues.nameCheckLists} onChange={handleInputChange}>\r\n            {nameCheckLists.map((item, key) => {\r\n              return <option key={key}>{item.name}</option>\r\n            })}              \r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>        \r\n\r\n        <Form.Row className=\"button\">\r\n          <Button variant=\"primary\" onClick={handleSubmit} type=\"submit\">\r\n            Enviar\r\n          </Button>\r\n        </Form.Row>\r\n\r\n      </Form>\r\n    </Container>\r\n  )\r\n}","import React from 'react';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Main from './pages/Navbar'\nimport List from './pages/List'\nimport FormCard from './components/FormCard'\nimport FormCheckList from './components/FormCheckList';\nimport FormCheckItem from './components/FormCheckItem';\n\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n      <Main />\n        <Switch>\n          <Route path=\"/\" exact={true} component={FormCard} />\n          <Route path=\"/checkList\"  component={FormCheckList} />\n          <Route path=\"/checkItem\"  component={FormCheckItem} />\n          <Route path=\"/list\"  component={List} />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}